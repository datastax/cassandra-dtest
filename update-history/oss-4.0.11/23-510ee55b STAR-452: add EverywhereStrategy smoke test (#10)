--- a/bootstrap_test.py
+++ b/bootstrap_test.py
@@ -1017,7 +1017,17 @@
         assert_bootstrap_state(self, node3, 'COMPLETED', user='cassandra', password='cassandra')
         node3.wait_for_binary_interface()
 
-<<<<<<<
+    @staticmethod
+    def nodetool_resume_command(cluster):
+        """
+        In versions after 4.1, we disable resumable bootstrap by default (see CASSANDRA-17679). In order to run
+        nodetool boostrap resume in these subsequent versions we have to manually indicate the intent to allow resumability.
+        """
+        nt_resume_cmd = 'bootstrap resume'
+        if cluster.version() >= '4.2':
+            nt_resume_cmd += ' -f'
+        return nt_resume_cmd
+
     @since('4.0')
     @pytest.mark.no_vnodes
     def test_simple_bootstrap_with_everywhere_strategy(self):
@@ -1068,19 +1078,6 @@
         assert_almost_equal(size1, size2, error=0.3)
 
         assert_bootstrap_state(self, node2, 'COMPLETED')
-=======
-    @staticmethod
-    def nodetool_resume_command(cluster):
-        """
-        In versions after 4.1, we disable resumable bootstrap by default (see CASSANDRA-17679). In order to run
-        nodetool boostrap resume in these subsequent versions we have to manually indicate the intent to allow resumability.
-        """
-        nt_resume_cmd = 'bootstrap resume'
-        if cluster.version() >= '4.2':
-            nt_resume_cmd += ' -f'
-        return nt_resume_cmd
-
->>>>>>>
 
 class TestBootstrap(BootstrapTester):
     """
